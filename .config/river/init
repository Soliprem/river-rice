#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

'XKB_DEFAULT_LAYOUT=it'
# Use the "logo" key as the primary modifier
mod="Mod4"

riverctl input 1739:52390:DELL095D:00_06CB:CCA6_Touchpad tap enabled
riverctl input 1739:52390:DELL095D:00_06CB:CCA6_Touchpad tap-button-map left-right-middle

# Mod+D to launch rofi
riverctl map -repeat normal $mod D spawn "rofi -show run"
riverctl map -repeat normal $mod+Shift D spawn "rofi -show drun"
riverctl map -repeat normal $mod+Shift C spawn "rofi -show calc"

# Bind useful Scripts
riverctl map -repeat normal $mod g spawn "dm-dictionary"
riverctl map -repeat normal $mod+Control+Mod1 R spawn "randrice"
riverctl map -repeat normal $mod e spawn "schwa"
riverctl map -repeat normal $mod+Shift e spawn "dm-special"
riverctl map -repeat normal $mod c spawn "dm-spellcheck"
riverctl map -repeat normal $mod n spawn "foot nvim -c VimwikiIndex"
riverctl map -repeat normal Print spawn "wayshot --stdout | wl-copy"
riverctl map -repeat normal Shift Print spawn "wayshotpick"
riverctl map -repeat normal $mod BackSpace spawn "wlogout -p layer-shell"

# Mod+M to launch ncmpcpp
riverctl map -repeat normal $mod M spawn "foot ncmpcpp"

riverctl map -repeat normal $mod r spawn "foot nnn"
riverctl map -repeat normal $mod+Shift r spawn "foot btop"

# Mod+E to start an instance of pcmanfm
# riverctl map normal $mod E spawn pcmanfm

# Mod+W to start an instance of firefox
riverctl map normal $mod W spawn firefox

# Mod+X to start an instance of foot
riverctl map -repeat normal $mod Return spawn foot

# Mod+Q to close the focused view
riverctl map -repeat normal $mod Q close

# Mod+Shift+E to exit river
riverctl map normal $mod+Shift E exit

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map -repeat normal $mod J focus-view next
riverctl map -repeat normal $mod K focus-view previous

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map -repeat normal $mod+Shift J swap next
riverctl map -repeat normal $mod+Shift K swap previous

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Space zoom

# Mod+H and Mod+L to decrease/increase the main ratio of rivertile(1)
riverctl map -repeat normal $mod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map -repeat normal $mod L send-layout-cmd rivertile "main-ratio +0.05"

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal $mod+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-count -1"

# Mod+Alt+{H,J,K,L} to move views
riverctl map normal $mod+Mod1 H move left 100
riverctl map normal $mod+Mod1 J move down 100
riverctl map normal $mod+Mod1 K move up 100
riverctl map normal $mod+Mod1 L move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Mod1+Control H snap left
riverctl map normal $mod+Mod1+Control J snap down
riverctl map normal $mod+Mod1+Control K snap up
riverctl map normal $mod+Mod1+Control L snap right

# Mod+Alt+Shif+{H,J,K,L} to resize views
riverctl map normal $mod+Mod1+Shift H resize horizontal -100
riverctl map normal $mod+Mod1+Shift J resize vertical 100
riverctl map normal $mod+Mod1+Shift K resize vertical -100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

#Sticky
# all_tags=$(((1 << 32) - 1))
# sticky_tag=$((1 << 31))
# all_but_sticky_tag=$(( $all_tags ^ $sticky_tag ))
#
# riverctl map normal Super S toggle-view-tags $sticky_tag
# riverctl spawn-tagmask ${all_but_sticky_tag}

# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20))

# Toggle the scratchpad with Super+P
riverctl map normal Super y toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift+P
riverctl map normal Super+Shift y set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$((((1 << 32) - 1) ^ scratch_tag))
riverctl spawn-tagmask ${all_but_scratch_tag}

for i in $(seq 1 9); do
	tags=$((1 << (i - 1)))

	# Mod+[1-9] to focus tag [0-8]
	# riverctl map normal $mod $i set-focused-tags $tags, modified to support sticky
	riverctl map normal Super $i set-focused-tags $tags # (($sticky_tag + $tags))

	# Mod+Shift+[1-9] to tag focused view with tag [0-8]
	riverctl map normal $mod+Shift $i set-view-tags $tags

	# Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
	riverctl map normal $mod+Control $i toggle-focused-tags $tags

	# Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
	riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Mod+Tab to go to the previous tag
riverctl map -repeat normal $mod TAB focus-previous-tags

# Mod+Space to toggle float
riverctl map -repeat normal $mod+Shift Space toggle-float

# Mod+F to toggle fullscreen
riverctl map -repeat normal $mod F toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

riverctl map -repeat normal $mod p spawn 'mpc toggle && notify-status'

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
	# Eject the optical drive (well if you still have one that is)
	riverctl map $mode None XF86Eject spawn 'eject -T'

	# Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
	riverctl map -repeat $mode None XF86AudioRaiseVolume spawn 'pamixer -i 5 && notify-volume'
	riverctl map -repeat $mode None XF86AudioLowerVolume spawn 'pamixer -d 5 && notify-volume'
	riverctl map -repeat $mode None XF86AudioMute spawn 'pamixer --toggle-mute && notify-volume'

	# Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
	riverctl map -repeat $mode None XF86AudioMedia spawn 'playerctl play-pause'
	riverctl map -repeat $mode None XF86AudioPlay spawn 'playerctl play-pause'
	riverctl map -repeat $mode None XF86AudioPrev spawn 'playerctl previous'
	riverctl map -repeat $mode None XF86AudioNext spawn 'playerctl next'

	# Control screen backlight brighness with light (https://github.com/haikarainen/light)
	riverctl map -repeat $mode None XF86MonBrightnessUp spawn 'brightnessctl s +5% && notify-brightness'
	riverctl map -repeat $mode None XF86MonBrightnessDown spawn 'brightnessctl s 5%- && notify-brightness'
done

# Set background and border color
river-theme

riverctl xcursor-theme 'Bibata-Modern-Ice' 24

# Other options
riverctl attach-mode bottom
riverctl set-cursor-warp on-output-change

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

## Autostart
# Starts sound stuff
riverctl spawn "pipewire"
riverctl spawn "waybar-restart"
riverctl spawn "pipewire-pulse"
riverctl spawn "wireplumber"
# Sets wallpaper and launches bar
riverctl spawn "swaybg -i $HOME/.config/wpg/.current"
# Starts music player daemon and button support
riverctl spawn "mpd"
riverctl spawn "mpd-notification -m ~/Music"
# Allows GUI programs to be run as root
riverctl spawn "/usr/lib/xfce-polkit/xfce-polkit"
# refresh rate
# riverctl spawn "wlr-randr --output HDMI-A-1 --mode 1920x1080@120Hz"
# notifications
riverctl spawn "mako"
riverctl spawn "blueman-applet"
# Loads a random song so the bar module looks good
# riverctl spawn "sleep 1 && ransong"

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
# bash "$HOME"/.config/river/process.sh
# usage: import-gsettings
config="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-3.0/settings.ini"
if [ ! -f "$config" ]; then exit 1; fi

gnome_schema="org.gnome.desktop.interface"
gtk_theme="$(grep 'gtk-theme-name' "$config" | sed 's/.*\s*=\s*//')"
icon_theme="$(grep 'gtk-icon-theme-name' "$config" | sed 's/.*\s*=\s*//')"
cursor_theme="$(grep 'gtk-cursor-theme-name' "$config" | sed 's/.*\s*=\s*//')"
font_name="$(grep 'gtk-font-name' "$config" | sed 's/.*\s*=\s*//')"
gsettings set "$gnome_schema" gtk-theme "$gtk_theme"
gsettings set "$gnome_schema" icon-theme "$icon_theme"
gsettings set "$gnome_schema" cursor-theme "$cursor_theme"
gsettings set "$gnome_schema" font-name "$font_name"

exec rivertile -view-padding 6 -outer-padding 6
